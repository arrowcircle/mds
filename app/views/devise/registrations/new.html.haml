.h-full.w-full.max-w-xl.mx-auto.align-middle
  = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: 'bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4'}, data: { turbo: false }) do |f|
    %h2.text-center Регистрация
    = render "devise/shared/error_messages", resource: resource
    - label_classes = "block text-sm font-bold mb-2 #{alert ? "text-red-500" : "text-gray-700"}"
    - input_classes = "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline #{alert ? "border-red-500" : nil}"
    .mb-4
      = f.label :email, "Email", class: label_classes
      = f.email_field :email, autofocus: true, autocomplete: "email", class: input_classes
    .mb-4
      = f.label :username, "Username", class: label_classes
      = f.text_field :username, autofocus: true, autocomplete: "username", class: input_classes
    .mb-4
      = f.label :password, "Пароль", class: label_classes
      - if @minimum_password_length
        %em.block.text-sm.font-normal.mb-2.text-gray-900
          (минимум #{@minimum_password_length} символов)
      = f.password_field :password, autocomplete: "new-password", class: input_classes
    .mb-4
      = f.label :password_confirmation, "Подтверждение пароля", class: label_classes
      = f.password_field :password_confirmation, autocomplete: "new-password", class: input_classes
    .mb-4
      - if @user.avatar.present?
        = image_tag @user.avatar.imgproxy_url(width: 100, resizing_type: :fill)
      = f.label :avatar
      = f.hidden_field :avatar, value: @user.cached_avatar_data
      = f.file_field :avatar
    .flex.items-center.justify-between.content-end
      = f.submit "Регистрация", class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 mr-6 rounded focus:outline-none focus:shadow-outline"
      = render "devise/shared/links"
