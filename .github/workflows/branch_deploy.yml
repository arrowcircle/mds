name: Deploy branch to k8s

on:
  workflow_dispatch:
    branches: '*'

jobs:
  release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Context for Buildx
      #   id: buildx-context
      #   run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # with:
        #   endpoint: builders

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: arrowcircle
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # allow: "network.host,security.insecure"
          # network: host
          push: true
          tags: arrowcircle/mds:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
        id: install

      - name: Install kube config
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBE_CONFIG }}' > ~/.kube/config
          chmod go-r ~/.kube/config

      - name: Test kubectl
        run: kubectl get nodes

      - name: Install release
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          IMGPROXY_KEY: ${{ secrets.IMGPROXY_KEY }}
          IMGPROXY_SALT: ${{ secrets.IMGPROXY_SALT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OLD_DATABASE_URL: ${{ secrets.OLD_DATABASE_URL }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          S3_HOST: ${{ secrets.S3_HOST }}
          IMGPROXY_ENDPOINT: ${{ vars.IMGPROXY_ENDPOINT }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
          S3_REGION: ${{ vars.S3_REGION }}
        run: |
          envsubst < k8s/mds/values.template.yaml > k8s/mds/values.yaml
          helm upgrade --install --wait -n mds --create-namespace --set image.tag=${{ github.sha }} mds ./k8s/mds
